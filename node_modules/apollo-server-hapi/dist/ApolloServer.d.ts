import type hapi from '@hapi/hapi';
export { GraphQLOptions } from 'apollo-server-core';
import { ApolloServerBase, GraphQLOptions } from 'apollo-server-core';
import type { ApolloServerPlugin } from 'apollo-server-plugin-base';
export declare class ApolloServer extends ApolloServerBase {
    createGraphQLServerOptions(request: hapi.Request, h: hapi.ResponseToolkit): Promise<GraphQLOptions>;
    applyMiddleware({ app, cors, path, route, disableHealthCheck, onHealthCheck, }: ServerRegistration): Promise<void>;
}
export interface ServerRegistration {
    app: hapi.Server;
    path?: string;
    cors?: boolean | hapi.RouteOptionsCors;
    route?: hapi.RouteOptions;
    onHealthCheck?: (request: hapi.Request) => Promise<any>;
    disableHealthCheck?: boolean;
}
export declare function ApolloServerPluginStopHapiServer(options: {
    hapiServer: hapi.Server;
}): ApolloServerPlugin;
//# sourceMappingURL=ApolloServer.d.ts.map